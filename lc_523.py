

# O(N * k))
# https://zxi.mytechroad.com/blog/hashtable/leetcode-523-continuous-subarray-sum/
class Solution(object):
    def checkSubarraySum(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
        def get_reminder(x):
            if k == 0:
                return x
            return (x - (k * (x // k))) % k

        if len(nums) <= 1: return False
        dp = set()
        N = len(nums)
        for idx in range(1, N):
            dp = set([get_reminder(nums[idx] + ele) for ele in dp])
            dp.add(get_reminder(nums[idx] + nums[idx - 1]))
            print(len(dp))
            if 0 in dp:
                return True

        return False


if __name__ == "__main__":
    obj = Solution()
    print(obj.checkSubarraySum([25,32,473,370,324,488,344,271,42,303,230,396,419,67,170,254,130,402,122,62,351,171,3,344,263,170,79,395,100,502,95,160,420,340,256,346,317,119,89,367,96,515,112,279,184,101,102,53,60,256,48,155,462,310,267,11,355,30,428,167,463,111,460,374,348,310,292,314,195,262,479,519,227,448,2,449,493,398,191,19,174,101,139,155,78,249,211,289,413,6,184,254,215,442,58,171,11,15,155,341,3,3,64,330,300,119,40,298,396,517,523,92,388,46,162,314,354,447,49,437,462,351,101,135,52,51,140,310,498,416,488,306,26,476,483,169,7,125,454,447,364,231,190,354,241,219,445,103,92,158,470,209,371,436,496,300,2,7,270,486,421,50,277,471,320,246,475,131,310,267,368,170,317,192,457,292,68,28,79,365,31,329,486,77,244,171,175,316,491,301,11,320,116,229,350,314,284,110,341,214,15,50,328,422,499,520,363,260,313,349,355,356,358,67,9,382,511,358,378,167,378,86,3,32,294,281,108,327,382,279,108,380,267,82,230,91,13,424,334,73,428,190,353,243,169,51,163,38,165,271,265,368,103,221,102,338,2,114,323,260,268,133,422,213,374,56,102,386,395,393,485,512,329,343,145,375,48,329,422,130,220,370,132,387,382,8,176,30,346,203,87,510,22,59,100,329,388,277,213,412,248,42,60,238,326,52,456,216,403,382,73,379,526,368,405,160,22,186,455,81,107,510,467,120,108,124,30,211,298,403,7,422,7,139,150,172,365,341,486,181,188,271,39,10,476,262,79,290,123,393,304,246,348,135,359,55,310,312,104,365,392,209,331,518,471,512,305,429,252,153,382,181,303,384,56,377,283,181,422,475,232,44,175,397,503,283,335,440,275,118,462,176,76,523,184,518,333,521,120,68,59,237,96,513,106,9,55,339,23,212,312,186,102,59,153,462,236,293,225,57,518,177,473,67,51,339,465,11,24,11,185,331,30,478,476,318,135,60,11,288,241,131,54,377,17,203,170,101,180,267,266,256,125,328,28,36,178,28,96,447,441,344,160,430,457,192,494,32,505,137,254,374,212,86,461,327,365,29,114,254,342,19,447,13,106,104,256,340,290,320,521,11,314,102,150,72,482,359,41,311,383,462,474,222,249,289,415,280,467,254,454,85,436,232,493,211,357,229,442,101,106,398,439,276,267,394,84,310,347,484,237,186,370,74,218,341,104,410,77,6,328,169,54,425,304,148,114,73,429,370,132,427,415,280,216,127,58,505,492,504,81,451,146,113,349,125,212,40,407,467,175,385,325,357,139,84,3,72,220,202,443,455,436,398,79,405,477,378,210,339,351,236,384,205,162,378,261,78,412,315,334,33,1,391,355,226,456,222,285,229,399,20,118,170,469,425,348,5,334,169,408,77,102,524,131,402,485,408,126,451,418,523,517,216,240,228,56,452,3,391,191,499,210,219,215,97,146,463,345,187,263,405,316,311,417,299,104,43,27,264,132,113,375,235,366,188,512,27,443,191,68,260,413,169,453,407,363,489,142,201,301,475,103,16,312,454,338,266,209,424,280,436,82,160,2,84,459,60,159,460,526,432,70,184,510,398,155,262,252,188,509,269,92,2,370,29,177,346,404,77,234,94,392,520,386,4,207,306,147,416,361,502,305,349,351,107,34,441,520,37,163,345,513,10,459,234,206,136,277,361,405,479,153,221,225,371,372,30,352,100,35,442,353,382,352,18,180,35,473,48,463,38,48,380,503,191,294,501,61,119,103,303,44,77,229,107,95,170,277,333,516,90,15,380,168,248,417,57,51,257,142,344,171,303,69,265,510,124,174,11,407,281,40,103,511,210,475,379,135,135,204,136,464,234,219,454,492,393,480,233,392,44,449,7,172,290,101,448,73,459,458,503,83,526,225,416,11,261,191,381,39,249,341,63,343,454,28,97,293,383,36,124,189,113,229,229,261,237,523,386,269,520,314,97,500,506,389,78,457,470,436,301,425,142,339,402,58,233,481,415,272,23,321,452,17,403,41,360,56,411,352,150,196,346,421,185,304,139,249,28,18,477,483,319,365,476,267,75,489,105,162,252,313,429,447,439,48,482,252,75,126,57,7,385,389,73,81,22,46,193,495,282,60,190,22,160,475,285,289,90,278,225,133,167,245,3,154,365,110,469,343,459,270,231,340,93,68,2,450,443,341,36,244,101,360,372,111,292,395,311,425,347,445,41,271,394,522,66,142,127,303,161,218,377,281,128,357,505,41,33], -1668852807))
    # print(obj.checkSubarraySum([23, 2, 6, 4, 7], 6))